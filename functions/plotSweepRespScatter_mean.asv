function plotSweepRespScatter_mean(exp_responses,response_name,ylimit,method)
n_exp=length(exp_responses);
 

justMean=0;

% define parameters

[nRoi, nStim, ~ , ~] = size(exp_responses{1});


%%


% Number of cells per figure and of figures
if nRoi >= 10
    cellsPerFigure = 10;
else
    cellsPerFigure = nRoi;
end
colors = jet(ceil(nRoi * 1.1));
colors = colors(end-nRoi+1 : end, :);
nFigures = ceil(nRoi/ cellsPerFigure);
rows = cellsPerFigure;
cols = nStim;
p=[];
for fig = 1: nFigures
    figure
    for neuron = 1:min(cellsPerFigure, nRoi-(fig-1)*cellsPerFigure)
        neuronID = (fig-1)*cellsPerFigure + neuron;
        maxi = -Inf;
        mini = Inf;
        for stim = 1:nStim
            kernel_means=[];
            for exp=1:n_exp
                responses=cell2mat(exp_responses(exp));
                resp=squeeze(responses(neuronID,stim,:,:));
                kernel=nanmean(resp,1);
                kernel_means=[kernel_means;nanmean(kernel',1)];
            end
            p=[p;kernel_means];
            [r,c]=size(kernel_means);
            x_axis=repmat(1:r,c,1);
           
            kernel_means_average=repmat(nanmean(kernel_means,1),1,n_exp);
            subplot(rows, cols, (neuron-1)*cols+stim)
            hold on
            scatter(x_axis,kernel_means,'c.');
             plot(1:length(kernel_means),kernel_means_average,'r')
            ylim (ylimit)
            if ~justMean
                m = max(resp(:));
            else
                m = max(kernel);  
            end
            if maxi < m
                maxi = m;
            end
            if ~justMean
                m = min(resp(:));
            else
                m = min(kernel);
            end
            if mini > m
                mini = m;
            end
            if neuron == 1
                %title(regexprep(stimulusSequence.labels{stim}, ', ', '\n'))
            end
            if stim == 1
                ylabel(response_name)
            end
            if stim > 1
               set(gca,'YTick',[])
            end
            set(gca, 'Color', 'w')
        end
        
    
    
    end
end
end